// Generated by Dagger (https://dagger.dev).
package com.example.breakingbad.viewmodel;

import com.example.breakingbad.database.BreakingBadApi;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<BreakingBadApi> apiServiceProvider;

  public MainViewModel_Factory(Provider<BreakingBadApi> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(apiServiceProvider.get());
  }

  public static MainViewModel_Factory create(Provider<BreakingBadApi> apiServiceProvider) {
    return new MainViewModel_Factory(apiServiceProvider);
  }

  public static MainViewModel newInstance(BreakingBadApi apiService) {
    return new MainViewModel(apiService);
  }
}
