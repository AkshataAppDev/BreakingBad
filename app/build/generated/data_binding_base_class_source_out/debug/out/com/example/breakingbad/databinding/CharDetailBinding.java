// Generated by data binding compiler. Do not edit!
package com.example.breakingbad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.breakingbad.R;
import com.example.breakingbad.viewmodel.MainViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class CharDetailBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout charDetail;

  @NonNull
  public final ImageView characterImage;

  @NonNull
  public final TextView characterName;

  @NonNull
  public final TextView nicknameTv;

  @NonNull
  public final TextView occupationTv;

  @NonNull
  public final TextView seasonAppearanceTv;

  @NonNull
  public final TextView statusTv;

  @Bindable
  protected MainViewModel mViewmodel;

  protected CharDetailBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout charDetail, ImageView characterImage, TextView characterName,
      TextView nicknameTv, TextView occupationTv, TextView seasonAppearanceTv, TextView statusTv) {
    super(_bindingComponent, _root, _localFieldCount);
    this.charDetail = charDetail;
    this.characterImage = characterImage;
    this.characterName = characterName;
    this.nicknameTv = nicknameTv;
    this.occupationTv = occupationTv;
    this.seasonAppearanceTv = seasonAppearanceTv;
    this.statusTv = statusTv;
  }

  public abstract void setViewmodel(@Nullable MainViewModel viewmodel);

  @Nullable
  public MainViewModel getViewmodel() {
    return mViewmodel;
  }

  @NonNull
  public static CharDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.char_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static CharDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<CharDetailBinding>inflateInternal(inflater, R.layout.char_detail, root, attachToRoot, component);
  }

  @NonNull
  public static CharDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.char_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static CharDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<CharDetailBinding>inflateInternal(inflater, R.layout.char_detail, null, false, component);
  }

  public static CharDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static CharDetailBinding bind(@NonNull View view, @Nullable Object component) {
    return (CharDetailBinding)bind(component, view, R.layout.char_detail);
  }
}
